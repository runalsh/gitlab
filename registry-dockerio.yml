version: 0.1

log:
  accesslog:
    disabled: false
  level: debug
  formatter: text
  fields:
    service: registry

storage:
  filesystem:
    rootdirectory: /var/lib/registry
    maxthreads: 100
  # s3:
  #   accesskey: awsaccesskey
  #   secretkey: awssecretkey
  #   region: us-west-1
  #   regionendpoint: http://myobjects.local
  #   forcepathstyle: true
  #   accelerate: false
  #   bucket: bucketname
  #   encrypt: true
  #   keyid: mykeyid
  #   secure: true
  #   v4auth: true
  #   chunksize: 5242880
  #   multipartcopychunksize: 33554432
  #   multipartcopymaxconcurrency: 100
  #   multipartcopythresholdsize: 33554432
  #   rootdirectory: /s3/object/name/prefix
  #   usedualstack: false
  #   loglevel: debug  
  delete:
    enabled: true
  cache:
    blobdescriptor: inmemory
  maintenance:
    uploadpurging:
      enabled: true
      age: 168h
      interval: 12h
      dryrun: false
    readonly:
      enabled: false

http:
  addr: ":5000"
  # tls:
  #   certificate: /certs/registry.crt
  #   key: /certs/registry.key
  headers:
    X-Content-Type-Options: [nosniff]
    Access-Control-Allow-Origin: ['*']
    Access-Control-Allow-Methods: ['HEAD', 'GET', 'OPTIONS', 'DELETE']
    Access-Control-Allow-Headers: ['Authorization', 'Accept', 'Cache-Control']
    Access-Control-Expose-Headers: ['Docker-Content-Digest']
    Access-Control-Max-Age: [1728000]
    Access-Control-Allow-Credentials: [true]
  debug:
    addr: :5001
    prometheus:
      enabled: true
      path: /metrics

proxy:
  enablenamespaces: true
  remoteurl: https://registry-1.docker.io
  username: username
  password: password
  ttl: 168h
# # /etc/docker/daemon.json in settings
# # {
# #   "registry-mirrors": ["https://<my-docker-mirror-host>"]
# # }
health:
  storagedriver:
    enabled: true
    interval: 10s
    threshold: 3

# auth:
#   htpasswd:
#     realm: basic-realm
#     path: /etc/docker/registry/.htpasswd
